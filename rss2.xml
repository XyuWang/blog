<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title><![CDATA[Xyu Wang's Blog]]></title>
    <link>https://xyu.wang/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    <description><![CDATA[]]></description>
    <pubDate>Fri, 23 Jan 2015 17:30:57 GMT</pubDate>
    <generator>http://zespia.tw/hexo/</generator>
    
    <item>
      <title><![CDATA[关于翻墙的那些事]]></title>
      <link>https://xyu.wang/2015/01/16/%E5%85%B3%E4%BA%8E%E7%BF%BB%E5%A2%99%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/</link>
      <guid>https://xyu.wang/2015/01/16/%E5%85%B3%E4%BA%8E%E7%BF%BB%E5%A2%99%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/</guid>
      <pubDate>Fri, 16 Jan 2015 03:09:31 GMT</pubDate>
      <description>
      <![CDATA[<p>为了和邪恶的GFW对抗, 浪费了不少的时间， 把一些经验写在这里, 希望能让大家少走一些弯路。</p>
<p>废话不说了，直接上干货。</p>
<p>首先来分析一下需求：</p>
<ol>
<li>可以翻墙（废话）</li>
<li>稳定 (越稳定越好)</li>
<li>]]>
      </description>
      <content:encoded><![CDATA[<p>为了和邪恶的GFW对抗, 浪费了不少的时间， 把一些经验写在这里, 希望能让大家少走一些弯路。</p>
<p>废话不说了，直接上干货。</p>
<p>首先来分析一下需求：</p>
<ol>
<li>可以翻墙（废话）</li>
<li>稳定 (越稳定越好)</li>
<li>无缝（最好感觉不到墙的存在）</li>
</ol>
<p>先列举一下市面上的主要翻墙方法：<br>pptp/l2tp/openVPN/shadowsocks</p>
<p>最先用的是pptp。在公司（电信）用的好好的，发现换个地方上网（联通）就连不上了， 于是换了抗干扰更强的l2tp， 这下可以上了， 但一回家（长城宽带）什么pptp， l2tp全不管用， 无奈尝试架个openVPN果然还是一样。 而且这三者还有一个问题就是老是得手动点击连接VPN， 合上屏幕出去会再打开又得重连， 虽然说可以写个脚本自动连吧，但还得关注它连上没，连的又慢有时候还连不上，操心。 排除这三者。</p>
<p>接下来就是现在最流行的shadowsocks了， 详细说说它。</p>
<p>先根据<a href="https://github.com/shadowsocks/shadowsocks" target="_blank" rel="external">文档</a> 在服务器上安装好服务端<br>接下来轮到客户端， 在命令行下执行：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">brew install shadowsocks-libev</div><div class="line">ln -sfv /usr/local/opt/shadowsocks-libev/*.plist ~/Library/LaunchAgents</div></pre></td></tr></table></figure>

<p>之后编辑 <code>~/Library/LaunchAgents/homebrew.mxcl.shadowsocks-libev.plist</code></p>
<pre><code><span class="tag">&lt;<span class="title">dict</span>&gt;</span>
    <span class="tag">&lt;<span class="title">key</span>&gt;</span>Label<span class="tag">&lt;/<span class="title">key</span>&gt;</span>
    <span class="tag">&lt;<span class="title">string</span>&gt;</span>homebrew.mxcl.shadowsocks-libev<span class="tag">&lt;/<span class="title">string</span>&gt;</span>
    <span class="tag">&lt;<span class="title">key</span>&gt;</span>ProgramArguments<span class="tag">&lt;/<span class="title">key</span>&gt;</span>
    <span class="tag">&lt;<span class="title">array</span>&gt;</span>
      <span class="tag">&lt;<span class="title">string</span>&gt;</span>/usr/local/opt/shadowsocks-libev/bin/ss-local<span class="tag">&lt;/<span class="title">string</span>&gt;</span>
      <span class="tag">&lt;<span class="title">string</span>&gt;</span>-c<span class="tag">&lt;/<span class="title">string</span>&gt;</span>
      <span class="tag">&lt;<span class="title">string</span>&gt;</span>/usr/local/etc/shadowsocks-libev.json<span class="tag">&lt;/<span class="title">string</span>&gt;</span>
      <span class="tag">&lt;<span class="title">string</span>&gt;</span>-u<span class="tag">&lt;/<span class="title">string</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">array</span>&gt;</span>
    <span class="tag">&lt;<span class="title">key</span>&gt;</span>RunAtLoad<span class="tag">&lt;/<span class="title">key</span>&gt;</span>
    <span class="tag">&lt;<span class="title">true</span>/&gt;</span>
    <span class="tag">&lt;<span class="title">key</span>&gt;</span>KeepAlive<span class="tag">&lt;/<span class="title">key</span>&gt;</span>
    <span class="tag">&lt;<span class="title">true</span>/&gt;</span>
    <span class="tag">&lt;<span class="title">key</span>&gt;</span>StandardOutPath<span class="tag">&lt;/<span class="title">key</span>&gt;</span>
    <span class="tag">&lt;<span class="title">string</span>&gt;</span>/tmp/shadowsocks.log<span class="tag">&lt;/<span class="title">string</span>&gt;</span>
    <span class="tag">&lt;<span class="title">key</span>&gt;</span>StandardErrorPath<span class="tag">&lt;/<span class="title">key</span>&gt;</span>
    <span class="tag">&lt;<span class="title">string</span>&gt;</span>/tmp/shadowsocks.log<span class="tag">&lt;/<span class="title">string</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">dict</span>&gt;</span>
</code></pre><p>注意-u表示开启udp转发，同样也需要在服务端上开启udp转发。<br>编辑 <code>/usr/local/etc/shadowsocks-libev.json</code> 设定上服务器的相应参数<br>之后 <code>launchctl load ~/Library/LaunchAgents/homebrew.mxcl.shadowsocks-libev.plist</code><br><code>tail /tmp/shadowsocks.log</code> 显示</p>
<pre><code><span class="number">1</span> initialize ciphers... aes-<span class="number">256</span>-cfb
<span class="number">2</span> server listening at port <span class="number">1081</span>
<span class="number">3</span> udprelay enabled.
</code></pre><p>这就表示正常运行了</p>
<p>shadowsocks 是一个socks5代理，一般来说是用来代理网页的， 那怎么让它成为全局代理，类似vpn那样呢，这时候有2个工具能帮你实现<br>一是proxycap(免费) 二是proxifier（收费）<br>有免费的当然用免费的啦 下载<a href="http://www.proxycap.com/" target="_blank" rel="external">proxycap</a> 打开<br>新建一个代理 <img src="http://ww3.sinaimg.cn/large/9847331bjw1eojyre2xumj20df06mq3k.jpg" alt=""><br>之后再建立几个规则， 如图<img src="http://ww2.sinaimg.cn/large/9847331bjw1eojys979ilj20ij0c8wgh.jpg" alt=""><br>注意本机和服务器需要直连， 最后一条设置代理规则, 配置完成 OK<br><img src="http://ww4.sinaimg.cn/large/9847331bjw1eojyt2t1h9j204g01sjrc.jpg" alt="">点击Enable ProxyCap.<br>在命令行执行<code>curl ip.cn</code> 显示</p>
<blockquote>
<p>当前 IP：23.239.7.126 来自：美国 Linode<br> 大功告成。</p>
</blockquote>
<p>ps. 其实一开始用的客户端是GoAgentX， 后来发现有些问题（麻烦、udp）就不用了。<br>pps: 如果一直出现 unsupported cmd: 3 表示udp配置有问题 检查服务端是不是忘了加上-u, 只有nodejs和libev这两个版本才有udp转发。<br>ppps: 可能会出现文件句柄不足的问题， 需要改大一些。</p>
<p>现在再也不用担心VPN断开，不用重连， 稳定， 无缝，忘记墙的存在吧。</p>
]]></content:encoded>
      <comments>https://xyu.wang/2015/01/16/%E5%85%B3%E4%BA%8E%E7%BF%BB%E5%A2%99%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/#disqus_comments</comments>
    </item>
    
    <item>
      <title><![CDATA[Hello World]]></title>
      <link>https://xyu.wang/2015/01/16/hello-world/</link>
      <guid>https://xyu.wang/2015/01/16/hello-world/</guid>
      <pubDate>Thu, 15 Jan 2015 16:12:30 GMT</pubDate>
      <description>
      <![CDATA[<p>买这个域名的时候就打算架一个博客, 但一直拖到现在才做, 现在架好了, 也该写文章了, 先来个经典的开场白吧: </p>
<h1 id="Hello_World">Hello World</h1>
]]>
      </description>
      <content:encoded><![CDATA[<p>买这个域名的时候就打算架一个博客, 但一直拖到现在才做, 现在架好了, 也该写文章了, 先来个经典的开场白吧: </p>
<h1 id="Hello_World">Hello World</h1>
]]></content:encoded>
      <comments>https://xyu.wang/2015/01/16/hello-world/#disqus_comments</comments>
    </item>
    
  </channel>
</rss>